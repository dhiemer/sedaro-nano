---
apiVersion: v1
kind: Service
metadata:
  name: sedaro-nano-app
spec:
  type: NodePort
  selector:
    app: app
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 30081

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sedaro-nano-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          image: "{{ .Values.ecr_repository }}/sedaro-app:{{ .Values.app.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: sedaro-nano-web
spec:
  type: NodePort
  selector:
    app: web
  ports:
    - port: 3030
      targetPort: 3030
      nodePort: 30080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sedaro-nano-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: "{{ .Values.ecr_repository }}/sedaro-web:{{ .Values.web.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3030
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /
              port: 3030
            initialDelaySeconds: 10
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 3030
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: sedaro-nano-ingress
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:032021926264:certificate/61734d9b-fb9f-4b91-b120-58c475678c4a
#     alb.ingress.kubernetes.io/load-balancer-name: sedaro-nano-alb
#     alb.ingress.kubernetes.io/ssl-redirect: "443"
# spec:
#   ingressClassName: alb
#   rules:
#     - host: sedaro-nano.daveops.pro
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: sedaro-nano-web
#                 port:
#                   number: 3030
#           - path: /api
#             pathType: Prefix
#             backend:
#               service:
#                 name: sedaro-nano-app
#                 port:
#                   number: 8000
# 