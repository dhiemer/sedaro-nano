---
apiVersion: v1
kind: Service
metadata:
  name: sedaro-demo-app
spec:
  selector:
    app: app
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sedaro-demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          image: 032021926264.dkr.ecr.us-east-1.amazonaws.com/sedaro-app:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: sedaro-demo-web
spec:
  selector:
    app: web
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 3030
      targetPort: 3030
      nodePort: 30080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sedaro-demo-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: 032021926264.dkr.ecr.us-east-1.amazonaws.com/sedaro-web:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3030
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /
              port: 3030
            initialDelaySeconds: 10
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 3030
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sedaro-demo-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:032021926264:certificate/61734d9b-fb9f-4b91-b120-58c475678c4a
    alb.ingress.kubernetes.io/load-balancer-name: sedaro-demo-alb
    alb.ingress.kubernetes.io/ssl-redirect: "443"
spec:
  ingressClassName: alb
  rules:
    - host: sedaro-demo.daveops.pro
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sedaro-demo-web
                port:
                  number: 3030
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: sedaro-demo-app
                port:
                  number: 8000
